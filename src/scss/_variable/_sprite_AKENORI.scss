/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sp-i-btn-h-name: 'sp-i-btn-h';
$sp-i-btn-h-x: 0px;
$sp-i-btn-h-y: 0px;
$sp-i-btn-h-offset-x: 0px;
$sp-i-btn-h-offset-y: 0px;
$sp-i-btn-h-width: 19px;
$sp-i-btn-h-height: 22px;
$sp-i-btn-h-total-width: 68px;
$sp-i-btn-h-total-height: 254px;
$sp-i-btn-h-image: '../img/sprite_AKENORI.png';
$sp-i-btn-h: (0px, 0px, 0px, 0px, 19px, 22px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-btn-h', );
$sp-i-btn-name: 'sp-i-btn';
$sp-i-btn-x: 0px;
$sp-i-btn-y: 27px;
$sp-i-btn-offset-x: 0px;
$sp-i-btn-offset-y: -27px;
$sp-i-btn-width: 19px;
$sp-i-btn-height: 22px;
$sp-i-btn-total-width: 68px;
$sp-i-btn-total-height: 254px;
$sp-i-btn-image: '../img/sprite_AKENORI.png';
$sp-i-btn: (0px, 27px, 0px, -27px, 19px, 22px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-btn', );
$sp-i-eclips-pink-name: 'sp-i-eclips-pink';
$sp-i-eclips-pink-x: 0px;
$sp-i-eclips-pink-y: 54px;
$sp-i-eclips-pink-offset-x: 0px;
$sp-i-eclips-pink-offset-y: -54px;
$sp-i-eclips-pink-width: 28px;
$sp-i-eclips-pink-height: 28px;
$sp-i-eclips-pink-total-width: 68px;
$sp-i-eclips-pink-total-height: 254px;
$sp-i-eclips-pink-image: '../img/sprite_AKENORI.png';
$sp-i-eclips-pink: (0px, 54px, 0px, -54px, 28px, 28px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-eclips-pink', );
$sp-i-list-diff-0-name: 'sp-i-list-diff-0';
$sp-i-list-diff-0-x: 0px;
$sp-i-list-diff-0-y: 87px;
$sp-i-list-diff-0-offset-x: 0px;
$sp-i-list-diff-0-offset-y: -87px;
$sp-i-list-diff-0-width: 56px;
$sp-i-list-diff-0-height: 56px;
$sp-i-list-diff-0-total-width: 68px;
$sp-i-list-diff-0-total-height: 254px;
$sp-i-list-diff-0-image: '../img/sprite_AKENORI.png';
$sp-i-list-diff-0: (0px, 87px, 0px, -87px, 56px, 56px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-list-diff-0', );
$sp-i-list-diff-1-name: 'sp-i-list-diff-1';
$sp-i-list-diff-1-x: 0px;
$sp-i-list-diff-1-y: 148px;
$sp-i-list-diff-1-offset-x: 0px;
$sp-i-list-diff-1-offset-y: -148px;
$sp-i-list-diff-1-width: 60px;
$sp-i-list-diff-1-height: 56px;
$sp-i-list-diff-1-total-width: 68px;
$sp-i-list-diff-1-total-height: 254px;
$sp-i-list-diff-1-image: '../img/sprite_AKENORI.png';
$sp-i-list-diff-1: (0px, 148px, 0px, -148px, 60px, 56px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-list-diff-1', );
$sp-i-list-diff-2-name: 'sp-i-list-diff-2';
$sp-i-list-diff-2-x: 0px;
$sp-i-list-diff-2-y: 209px;
$sp-i-list-diff-2-offset-x: 0px;
$sp-i-list-diff-2-offset-y: -209px;
$sp-i-list-diff-2-width: 68px;
$sp-i-list-diff-2-height: 45px;
$sp-i-list-diff-2-total-width: 68px;
$sp-i-list-diff-2-total-height: 254px;
$sp-i-list-diff-2-image: '../img/sprite_AKENORI.png';
$sp-i-list-diff-2: (0px, 209px, 0px, -209px, 68px, 45px, 68px, 254px, '../img/sprite_AKENORI.png', 'sp-i-list-diff-2', );
$sp-i-btn-h-2x-name: 'sp-i-btn-h@2x';
$sp-i-btn-h-2x-x: 0px;
$sp-i-btn-h-2x-y: 0px;
$sp-i-btn-h-2x-offset-x: 0px;
$sp-i-btn-h-2x-offset-y: 0px;
$sp-i-btn-h-2x-width: 38px;
$sp-i-btn-h-2x-height: 44px;
$sp-i-btn-h-2x-total-width: 136px;
$sp-i-btn-h-2x-total-height: 508px;
$sp-i-btn-h-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-btn-h-2x: (0px, 0px, 0px, 0px, 38px, 44px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-btn-h@2x', );
$sp-i-btn-2x-name: 'sp-i-btn@2x';
$sp-i-btn-2x-x: 0px;
$sp-i-btn-2x-y: 54px;
$sp-i-btn-2x-offset-x: 0px;
$sp-i-btn-2x-offset-y: -54px;
$sp-i-btn-2x-width: 38px;
$sp-i-btn-2x-height: 44px;
$sp-i-btn-2x-total-width: 136px;
$sp-i-btn-2x-total-height: 508px;
$sp-i-btn-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-btn-2x: (0px, 54px, 0px, -54px, 38px, 44px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-btn@2x', );
$sp-i-eclips-pink-2x-name: 'sp-i-eclips-pink@2x';
$sp-i-eclips-pink-2x-x: 0px;
$sp-i-eclips-pink-2x-y: 108px;
$sp-i-eclips-pink-2x-offset-x: 0px;
$sp-i-eclips-pink-2x-offset-y: -108px;
$sp-i-eclips-pink-2x-width: 56px;
$sp-i-eclips-pink-2x-height: 56px;
$sp-i-eclips-pink-2x-total-width: 136px;
$sp-i-eclips-pink-2x-total-height: 508px;
$sp-i-eclips-pink-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-eclips-pink-2x: (0px, 108px, 0px, -108px, 56px, 56px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-eclips-pink@2x', );
$sp-i-list-diff-0-2x-name: 'sp-i-list-diff-0@2x';
$sp-i-list-diff-0-2x-x: 0px;
$sp-i-list-diff-0-2x-y: 174px;
$sp-i-list-diff-0-2x-offset-x: 0px;
$sp-i-list-diff-0-2x-offset-y: -174px;
$sp-i-list-diff-0-2x-width: 112px;
$sp-i-list-diff-0-2x-height: 112px;
$sp-i-list-diff-0-2x-total-width: 136px;
$sp-i-list-diff-0-2x-total-height: 508px;
$sp-i-list-diff-0-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-list-diff-0-2x: (0px, 174px, 0px, -174px, 112px, 112px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-list-diff-0@2x', );
$sp-i-list-diff-1-2x-name: 'sp-i-list-diff-1@2x';
$sp-i-list-diff-1-2x-x: 0px;
$sp-i-list-diff-1-2x-y: 296px;
$sp-i-list-diff-1-2x-offset-x: 0px;
$sp-i-list-diff-1-2x-offset-y: -296px;
$sp-i-list-diff-1-2x-width: 120px;
$sp-i-list-diff-1-2x-height: 112px;
$sp-i-list-diff-1-2x-total-width: 136px;
$sp-i-list-diff-1-2x-total-height: 508px;
$sp-i-list-diff-1-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-list-diff-1-2x: (0px, 296px, 0px, -296px, 120px, 112px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-list-diff-1@2x', );
$sp-i-list-diff-2-2x-name: 'sp-i-list-diff-2@2x';
$sp-i-list-diff-2-2x-x: 0px;
$sp-i-list-diff-2-2x-y: 418px;
$sp-i-list-diff-2-2x-offset-x: 0px;
$sp-i-list-diff-2-2x-offset-y: -418px;
$sp-i-list-diff-2-2x-width: 136px;
$sp-i-list-diff-2-2x-height: 90px;
$sp-i-list-diff-2-2x-total-width: 136px;
$sp-i-list-diff-2-2x-total-height: 508px;
$sp-i-list-diff-2-2x-image: '../img/sprite_AKENORI@2x.png';
$sp-i-list-diff-2-2x: (0px, 418px, 0px, -418px, 136px, 90px, 136px, 508px, '../img/sprite_AKENORI@2x.png', 'sp-i-list-diff-2@2x', );
$spritesheet-width: 68px;
$spritesheet-height: 254px;
$spritesheet-image: '../img/sprite_AKENORI.png';
$spritesheet-sprites: ($sp-i-btn-h, $sp-i-btn, $sp-i-eclips-pink, $sp-i-list-diff-0, $sp-i-list-diff-1, $sp-i-list-diff-2, );
$spritesheet: (68px, 254px, '../img/sprite_AKENORI.png', $spritesheet-sprites, );
$retina-spritesheet-width: 136px;
$retina-spritesheet-height: 508px;
$retina-spritesheet-image: '../img/sprite_AKENORI@2x.png';
$retina-spritesheet-sprites: ($sp-i-btn-h-2x, $sp-i-btn-2x, $sp-i-eclips-pink-2x, $sp-i-list-diff-0-2x, $sp-i-list-diff-1-2x, $sp-i-list-diff-2-2x, );
$retina-spritesheet: (136px, 508px, '../img/sprite_AKENORI@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$sp-i-btn-h-group-name: 'sp-i-btn-h';
$sp-i-btn-h-group: ('sp-i-btn-h', $sp-i-btn-h, $sp-i-btn-h-2x, );
$sp-i-btn-group-name: 'sp-i-btn';
$sp-i-btn-group: ('sp-i-btn', $sp-i-btn, $sp-i-btn-2x, );
$sp-i-eclips-pink-group-name: 'sp-i-eclips-pink';
$sp-i-eclips-pink-group: ('sp-i-eclips-pink', $sp-i-eclips-pink, $sp-i-eclips-pink-2x, );
$sp-i-list-diff-0-group-name: 'sp-i-list-diff-0';
$sp-i-list-diff-0-group: ('sp-i-list-diff-0', $sp-i-list-diff-0, $sp-i-list-diff-0-2x, );
$sp-i-list-diff-1-group-name: 'sp-i-list-diff-1';
$sp-i-list-diff-1-group: ('sp-i-list-diff-1', $sp-i-list-diff-1, $sp-i-list-diff-1-2x, );
$sp-i-list-diff-2-group-name: 'sp-i-list-diff-2';
$sp-i-list-diff-2-group: ('sp-i-list-diff-2', $sp-i-list-diff-2, $sp-i-list-diff-2-2x, );
$retina-groups: ($sp-i-btn-h-group, $sp-i-btn-group, $sp-i-eclips-pink-group, $sp-i-list-diff-0-group, $sp-i-list-diff-1-group, $sp-i-list-diff-2-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
